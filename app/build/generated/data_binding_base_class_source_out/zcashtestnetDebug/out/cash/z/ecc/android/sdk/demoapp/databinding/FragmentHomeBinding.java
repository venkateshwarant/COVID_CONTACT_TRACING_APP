// Generated by view binder compiler. Do not edit!
package cash.z.ecc.android.sdk.demoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import cash.z.ecc.android.sdk.demoapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final Button clearData;

  @NonNull
  public final EditText currentDate;

  @NonNull
  public final LinearLayout homeFragContainer;

  @NonNull
  public final ListView offerList;

  @NonNull
  public final Button resetDevice;

  @NonNull
  public final Button sendData;

  @NonNull
  public final Button testedPositiveButton;

  @NonNull
  public final TextView textBalance;

  @NonNull
  public final TextView textInfo;

  @NonNull
  public final TextView textStatus;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull CardView cardView,
      @NonNull Button clearData, @NonNull EditText currentDate,
      @NonNull LinearLayout homeFragContainer, @NonNull ListView offerList,
      @NonNull Button resetDevice, @NonNull Button sendData, @NonNull Button testedPositiveButton,
      @NonNull TextView textBalance, @NonNull TextView textInfo, @NonNull TextView textStatus) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.clearData = clearData;
    this.currentDate = currentDate;
    this.homeFragContainer = homeFragContainer;
    this.offerList = offerList;
    this.resetDevice = resetDevice;
    this.sendData = sendData;
    this.testedPositiveButton = testedPositiveButton;
    this.textBalance = textBalance;
    this.textInfo = textInfo;
    this.textStatus = textStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.clearData;
      Button clearData = rootView.findViewById(id);
      if (clearData == null) {
        break missingId;
      }

      id = R.id.currentDate;
      EditText currentDate = rootView.findViewById(id);
      if (currentDate == null) {
        break missingId;
      }

      LinearLayout homeFragContainer = (LinearLayout) rootView;

      id = R.id.offerList;
      ListView offerList = rootView.findViewById(id);
      if (offerList == null) {
        break missingId;
      }

      id = R.id.resetDevice;
      Button resetDevice = rootView.findViewById(id);
      if (resetDevice == null) {
        break missingId;
      }

      id = R.id.sendData;
      Button sendData = rootView.findViewById(id);
      if (sendData == null) {
        break missingId;
      }

      id = R.id.testedPositiveButton;
      Button testedPositiveButton = rootView.findViewById(id);
      if (testedPositiveButton == null) {
        break missingId;
      }

      id = R.id.text_balance;
      TextView textBalance = rootView.findViewById(id);
      if (textBalance == null) {
        break missingId;
      }

      id = R.id.text_info;
      TextView textInfo = rootView.findViewById(id);
      if (textInfo == null) {
        break missingId;
      }

      id = R.id.text_status;
      TextView textStatus = rootView.findViewById(id);
      if (textStatus == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, cardView, clearData, currentDate,
          homeFragContainer, offerList, resetDevice, sendData, testedPositiveButton, textBalance,
          textInfo, textStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
