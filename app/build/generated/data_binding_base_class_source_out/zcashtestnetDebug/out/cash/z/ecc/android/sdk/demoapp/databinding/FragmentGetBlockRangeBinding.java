// Generated by view binder compiler. Do not edit!
package cash.z.ecc.android.sdk.demoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import cash.z.ecc.android.sdk.demoapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGetBlockRangeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonApply;

  @NonNull
  public final TextInputEditText textEndHeight;

  @NonNull
  public final TextView textInfo;

  @NonNull
  public final TextInputLayout textLayoutEndHeight;

  @NonNull
  public final TextInputLayout textLayoutStartHeight;

  @NonNull
  public final TextInputEditText textStartHeight;

  private FragmentGetBlockRangeBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonApply, @NonNull TextInputEditText textEndHeight,
      @NonNull TextView textInfo, @NonNull TextInputLayout textLayoutEndHeight,
      @NonNull TextInputLayout textLayoutStartHeight, @NonNull TextInputEditText textStartHeight) {
    this.rootView = rootView;
    this.buttonApply = buttonApply;
    this.textEndHeight = textEndHeight;
    this.textInfo = textInfo;
    this.textLayoutEndHeight = textLayoutEndHeight;
    this.textLayoutStartHeight = textLayoutStartHeight;
    this.textStartHeight = textStartHeight;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGetBlockRangeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGetBlockRangeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_get_block_range, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGetBlockRangeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_apply;
      Button buttonApply = rootView.findViewById(id);
      if (buttonApply == null) {
        break missingId;
      }

      id = R.id.text_end_height;
      TextInputEditText textEndHeight = rootView.findViewById(id);
      if (textEndHeight == null) {
        break missingId;
      }

      id = R.id.text_info;
      TextView textInfo = rootView.findViewById(id);
      if (textInfo == null) {
        break missingId;
      }

      id = R.id.text_layout_end_height;
      TextInputLayout textLayoutEndHeight = rootView.findViewById(id);
      if (textLayoutEndHeight == null) {
        break missingId;
      }

      id = R.id.text_layout_start_height;
      TextInputLayout textLayoutStartHeight = rootView.findViewById(id);
      if (textLayoutStartHeight == null) {
        break missingId;
      }

      id = R.id.text_start_height;
      TextInputEditText textStartHeight = rootView.findViewById(id);
      if (textStartHeight == null) {
        break missingId;
      }

      return new FragmentGetBlockRangeBinding((ConstraintLayout) rootView, buttonApply,
          textEndHeight, textInfo, textLayoutEndHeight, textLayoutStartHeight, textStartHeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
